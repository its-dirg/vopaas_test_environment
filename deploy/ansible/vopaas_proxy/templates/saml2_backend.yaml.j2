module: satosa.backends.saml2.SamlBackend
name: Saml2SP
plugin: BackendModulePlugin

config:
  config:
    organization: {display_name: Example Identities, name: Example Identities Org., url: 'https://www.example.com'}
    contact_person:
      - {contact_type: technical, email_address: technical@example.com, given_name: Technical}
      - {contact_type: support, email_address: support@example.com, given_name: Support}

    key_file: "{{ proxy_backend_key }}"
    cert_file: "{{ proxy_backend_cert }}"

    metadata:
      local: ["{{ metadata_dir_idp1 }}", "{{ metadata_dir_idp2 }}"]

    entityid: <base_url>/<name>/proxy_saml2_backend.xml
    service:
      sp:
        allow_unsolicited: true
        endpoints:
          assertion_consumer_service:
            - [<base_url>/<name>/acs/post, 'urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST']
            - [<base_url>/<name>/acs/redirect, 'urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect']
          discovery_response:
            - [<base_url>/<name>/disco, 'urn:oasis:names:tc:SAML:profiles:SSO:idp-discovery-protocol']
        name_id_format:
          - urn:oasis:names:tc:SAML:2.0:nameid-format:transient

    xmlsec_binary: /usr/bin/xmlsec1

    logger:
      loglevel: debug
      rotating: {backupCount: 5, filename: sp.log, maxBytes: 500000}

  # disco_srv must be defined if there is more than one IdP in the metadata specified above
  disco_srv: "{{ pyff_discovery_url }}/role/idp.ds"
  state_id: <name>
  hash_type: persistent
  publish_metadata: <base_url>/<name>/metadata
